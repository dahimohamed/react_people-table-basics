{"version":3,"sources":["components/Navigation/Navigation.tsx","api/api.ts","components/Loader/Loader.tsx","utils/parents.ts","components/PeopleInfo/PeopleInfo.tsx","components/PeopleTable/PeopleTable.tsx","App.tsx","index.tsx"],"names":["Navigation","className","role","isActive","classNames","to","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","getMother","people","person","find","per","name","motherName","getFather","fatherName","PeopleInfo","slug","sex","born","died","PeopleTable","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","isLoaded","setIsLoaded","match","useMatch","selectedPersonSlug","params","loadPeople","loadedPeople","useEffect","length","map","App","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0c4b73cd.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from '../types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\n\nexport const getMother = (people: Person[], person: Person) => (\n  people.find(per => per.name === person.motherName)\n);\n\nexport const getFather = (people: Person[], person: Person) => (\n  people.find(per => per.name === person.fatherName)\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { getFather, getMother } from '../../utils/parents';\n\ninterface Props {\n  person: Person,\n  people: Person[],\n}\n\nexport const PeopleInfo: React.FC<Props> = ({ person, people }) => (\n  <>\n    <td>\n      <Link\n        to={`/people/${person.slug}`}\n        className={classNames({\n          'has-text-danger': person.sex === 'f',\n        })}\n      >\n        {person.name}\n      </Link>\n    </td>\n\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>\n      {person.motherName\n        && (\n          getMother(people, person)\n            ? (\n              <Link\n                className=\"has-text-danger\"\n                to={`/people/${getMother(people, person)?.slug}`}\n              >\n                {person.motherName}\n              </Link>\n            )\n            : person.motherName\n        )}\n\n      {!person.motherName && '-'}\n    </td>\n\n    <td>\n      {person.fatherName\n        && (\n          getFather(people, person)\n            ? (\n              <Link\n                to={`/people/${getFather(people, person)?.slug}`}\n              >\n                {person.fatherName}\n              </Link>\n            )\n            : person.fatherName\n        )}\n\n      {!person.fatherName && '-'}\n    </td>\n  </>\n);\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { useMatch } from 'react-router-dom';\nimport { getPeople } from '../../api/api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleInfo } from '../PeopleInfo/PeopleInfo';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState<Person[] | []>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const match = useMatch('/people/:slug');\n\n  const selectedPersonSlug = match?.params.slug;\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const loadedPeople = await getPeople();\n\n      setPeople(loadedPeople);\n      setIsLoaded(true);\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n          {people.length === 0 && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isLoaded && people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people?.map(person => (\n                  <tr\n                    key={person.slug}\n                    data-cy=\"person\"\n                    className={classNames({\n                      'has-background-warning':\n                        person.slug === selectedPersonSlug,\n                    })}\n                  >\n                    <PeopleInfo\n                      person={person}\n                      people={people}\n                    />\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { PeopleTable } from './components/PeopleTable';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <h1 className=\"title\">Home Page</h1>\n            }\n          />\n\n          <Route\n            path=\"/people\"\n            element={<PeopleTable />}\n          />\n\n          <Route\n            path=\"/people/:slug\"\n            element={<PeopleTable />}\n          />\n\n          <Route\n            path=\"/home\"\n            element={\n              <Navigate to=\"/\" />\n            }\n          />\n\n          <Route\n            path=\"*\"\n            element={\n              <h1 className=\"title\">Page not found</h1>\n            }\n          />\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}